<head>
        <meta http-equiv="Cache-control" content="public" max-age="31536000">
	<% title "The Who, What, When, Where, Why, and How's of HTML" %>
	<% description 'A close examination of everything about HTML.  From what it is used for to how it works to the best places to learn it.  Also, a tutorial on the bare minimum of HTML you need to know to create a basic web page.' %>
	<% keywords 'codingko, web development, computer programming, development, programming, tutorials, web development tutorials, html, css, javascript, ruby, ruby on rails, python' %>

</head>

<div class="html-body">
    <header>
        <h1 id="html-head">The Who, What, When, Where, Why, and How's of HTML</h1><br>
        <h4 id="html-by">By: Kenneth Olsen</h4>
    </header>

    <p id="html-intro">Hello! Welcome to the new series on codingko.com, the “Who, What, When, Where, Why, and How’s of
        Programming”. In this series I will explain everything you need to know about different programming languages,
        frameworks, tools, and many other technologies related to programming. When you get done reading an article you
        should have a much better grasp of the technology, as well as the best ways and places to start learning how to
        use it. So, without any further ado, I present to you, the first in the series, “The Who, What, Where, When,
        Why, and How’s of HTML”</p><br>
    <div id="html-content">
        <h2>What is HTML?</h2>

        <h3>Short Version:</h3>

        <p>HTML’s sole purpose is to allow the creation of webpages, that can be viewed by anyone connected to the
            internet.</p>

        <h3>Long Version:</h3>

        <p>
            HTML stands for HyperText Markup Language. Html describes the structure of web pages using markup language
            (Markup language is a way to make a document syntactically different from text). HTML, along with CSS and
            JavaScript, form the big 3 pillars of the internet. If you think of the internet as a house. The HTML would
            be the structure, or the frame of the house. Kind of like the 2x4’s you would use to build the frame of
            your house. CSS is all about describing the HTML, so it could be viewed as the paint and other decorations
            of the house. Finally, JavaScript adds functionality to a website and makes it dynamic. You could think of
            JavaScript as the wiring or electricity running through the house, which gives it the ability to be dynamic
            and do multiple things. The way HTML defines the structure of a webpage is through the use of HTML
            elements. These elements are each represented by their own tag and each tag represents a piece of content.
            A couple of examples of HTML tags are &lt;p&gt;…*paragraph content*…&lt;/p&gt;, the &lt;p&gt; tag
            represents paragraphs. Another tag every HTML document must have is &lt;body&gt;…*All the viewable content
            of a webpage*…&lt;/body&gt;, the body tags wrap around all the viewable content of your webpage. The
            internet browser uses the HTML tags as a set of instructions on how to put together your document online,
            as such, they are not viewable to you on the other side of the screen.
        </p>

        <h2>Who Created HTML?</h2>

        <p>
            HTML was created by Tim Berners-Lee, while working for CERN. Berners-Lee is also considered the “Father” of
            the world wide web.
        </p>

        <h2>When was HTML Created?</h2>

        <p>
            Tim Berners-Lee created HTML in 1990, and it was first released in 1991. There have since been 5 other
            versions of HTML released, with the most current version being HTML5, released in 2014.
        </p>

        <h2>What is HTML used for?</h2>

        <p>
            HTML provides the structure of every web-page on the internet. It does this using HTML elements,which are
            represented by HTML tags.
        </p>

        <h2>Why use HTML?</h2>

        <p>
            First and foremost, you should use HTML because you don’t really have another option. HTML, along with CSS
            (Cascading StyleSheets) and JavaScript, form the big 3 pillars of the internet. While you could get away
            with not knowing JavaScript (and I guess CSS, if you want very boring and plain webpages), HTML is a
            necessity for making webpages. So, if you want to be a web developer, or make anything online at all, you
            must know and use HTML.
        </p>

        <h2>How does HTML Work?</h2>

        <p>
            HTML consists of a series of short typed codes typed into a text file. HTML codes are always surrounded by
            the less than symbol “&lt;” and the greater than symbol “&gt;”, and are called elements, or tags. An
            example is
        </p>

        <img id="p-tag" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1534962329/htmlex1.png" alt="Image of some HTML code showing paragraph tags.">

        <p>
            Those 2 &lt;p&gt;…&lt;/p&gt; are opening and closing paragraph tags of the actual paragraph you were just
            reading. All the content in between the opening “&lt;p&gt;” and closing “&lt;/p&gt;” tags are assumed, by
            the browser, to be part of that specific paragraph and the browser will adjust the structure accordingly.
            As stated earlier, these tags are a set of instructions for your browser, so only your browser can see
            them. Through the HTML tags your browser knows how to display the content to whoever is viewing your
            content.
        </p>

        <h2>What are the Most Important Things to Know About HTML?</h2>

        <ul id="imp-html">
            <li>
                <p>
                    <h3>HTML is not a programming language. It is a markup language.</h3><br> The best way I can
                    describe the difference, is that a markup language gives instructions on the structure of a
                    document. A programming language would deal more with the functionality of an application.
                </p>
            </li>
            <li>
                <p>
                    <h3>Use HTML tags for what they were meant to be used for</h3><br>
                    Dont do things like using an HTML table for the layout of your web-page or a big bold
                    &lt;p&gt;something&lt;/p&gt; in place of an &lt;h1&gt;&lt;/h1&gt; for your title. It is not only
                    bad semantics, but it is awful for accessibility, which we will cover shortly.
                </p>
            </li>
            <li>
                <p>
                    <h3>Use CSS for style and positioning</h3><br>
                    Always try to use CSS to style and position your HTML elements. It is usually much easier. CSS also
                    gives you much better control over the HTML elements.
                </p>
            </li>
            <li>
                <p>
                    <h3>Always use the alt=" " tag</h3><br>
                    When using images in your website, always remember to use the alt="" HTML attribute. This is also
                    for accessibility, which I will be covering shortly.
                </p>
            </li>
            <li>
                <p>
                    <h3>Make your HTML easy to understand</h3><br>
                    You need to format your HTML correctly so that if anyone, yourself included, ever need to look at
                    it to solve a problem, it wont be very difficult to find. An example of a simple HTML document with
                    everything tabbed and nested correctly is

                    <img src="https://res.cloudinary.com/dmks1qdth/image/upload/v1534964740/nest-ex.png" alt="Image of some HTML code showing how to properly nest tags.">
                </p>
            </li>
            <li>
                <p>
                    <h3>Use the right tags for better SEO</h3><br>
                    Using the right HTML tags greatly improves your websites chances of getting ranked higher in search
                    engine results. It is called Search Engine Optimization (SEO) and it is a bit advanced, but I will
                    be doing an article on it in the future on codingko.com.
                </p>
            </li>
            <li>
                <p>
                    <h3>HTML is not Hard</h3><br>
                    The last thing I want to cover in thins section, is that HTML is not a difficult language to learn.
                    If you want to make anything online, then your starting point is HTML. Even if you do not want to
                    be a web developer or computer programmer, learning the basics of HTML is still important and can
                    set you apart from others in a job search. The world we live in is getting more technologically
                    advanced by the day. Any job that requires typing on a computer, or even just sending an E-mail can
                    involve HTML. Many companies want their employees to submit documents through a CMS (Content
                    Management System), which means you may have to write it in Markup, like HTML. So, do yourself a
                    favor and learn some HTML.
                </p>
            </li>
        </ul>

        <h2>What is the very minimum of HTML I need to know to create a basic web-page?</h2>

        <p>
            Instead of trying to explain everything with text, I have created a very simple webpage (and very ugly)
            with
            28 points on it. I have labeled each point of interest and will explain the HTML tag or feature below
            the
            screenshots.
        </p>
        <img id="html-tuts1" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1536678448/newHTMLtuts.png" alt="The first section of the Basic HTML tutorial">
        <ol id="html-tuts-list1" type="A">
            <li>
                The very first thing you have to do with any HTML document, is to declare doctype html. Make sure
                you
                remember the exclamation point in front.
            </li>
            <li>
                After declaring your document type, you ALWAYS have to put your opening html tag.
            </li>
            <li>
                This is the head section of your HTML. Anything you put in here will not be viewable in the
                browser.
                Things you put in the head section include, the webpage title, meta-data, style and script tags,
                CDN's,
                etc.
            </li>
            <li>
                The title of your webpage. This title does not display on the webpage itself, but it does display
                in
                the browser toolbar, in search engine results, and if a user added the page to their favorites, it
                will
                display.
            </li>
        </ol>
        <ol id="html-wide1" type="A" start="5">
            <li>
                This is the meta viewport tag. It helps make your web-page responsive. You should include it in
                the
                head section of every HTML document you would like to have viewed on any device.
            </li>
            <li>
                This is the link to the external CSS stylesheet. We did not make an actual external CSS
                stylesheet
                for
                this lesson, but if we had, you would link to it like this.
            </li>
            <li>
                This is how to load your CSS internally. All of your CSS rules will go in between the opening
                and
                closing style tags. When loading your CSS this way, it must always be put in between the
                opening
                and
                closing head tags.
            </li>
            <li>
                The body tag is where your visible content starts. All of the viewable content goes in between
                the
                opening and closing body tags.
            </li>
            <li>
                This is the Header tag. Usually it would contain the title of your webpage, navigation links, a
                logo,
                etc. It is important for Search Engine Optimization because when Google or Bing or whoever
                crawls
                your
                website, it will be looking for the Header to identify your webpage. It is also very important
                for
                accessability, which is making sure that everybody, even those with disabilities can access and
                navigate your web-page through the use of a screen-reader. There will be more about
                accessability
                shortly.
            </li>
            <li>
                The h1 tag is for the title or header of your document. You are only supposed to use 1 h1 per
                page.
                It
                is by default the largest of the h tags.
            </li>
            <li>
                The div tag has no real meaning. It is used as a container for content. The div tag makes it to
                group
                content together and style it with CSS. Also I gave the div a class name. Classes are for CSS.
                When
                you
                give an HTML element a class, you can then point to that element directly from your CSS and
                style
                it
                specifically. Div tags are some of the most useful tags in HTML.
            </li>
            <li>
                The p tag is for paragraphs. If you don't include the p tag in your HTML, the browser will
                assume
                you
                are just writing one long paper. The paragraph tag separates the paragraph from other content.
                For
                every new paragraph you start you must wrap the content with opening and closing p tags.
            </li>
        </ol>
        <img id="html-tuts2" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1536678460/newHTMLtuts2.png" alt="The second section of the Basic HTML tutorial">
        <ol id="html-tuts-list2" type="A" start="13">
            <li>
                The span tag is just like the div tag, in that it has no real meaning or purpose. It is used just
                like
                the div tag EXCEPT the span tag is for inline content. Such as in the example, it was used so I
                could
                style just a short bit of text inside a paragraph. I placed the span tags in 2 separate areas to
                show
                you that they can be used anywhere and as many times as you want in your HTML.
            </li>
            <li>
                The strong HTML tags create bold text.
            </li>
            <li>
                The i tag creates italicized text.
            </li>
            <li>
                This is a CSS inline style tag. Writing your CSS inline is generally frowned upon. You should
                either
                make an external
                CSS stylesheet and link to it in the head of your HTML or write your CSS internally by placing it
                in
                between style tags in the head ogf your HTML.
            </li>
        </ol>
        <ol id="html-wide2" type="A" start="17">
            <li>
                The img tag is for inserting images into your HTML. To use it you must specify the source of your
                image
                by putting src="" after the opening of the image tag. Inside the quotation marks you put in the
                location of the image you would like to appear on the webpage. In this case it is from Cloudinary
                and
                is an image of a zombie with a brain. The image I placed also has a style tag with the attribute
                float:
                right; This means that the image will be pushed to the right side of the screen. A floated image
                also
                makes text wrap around it instead of creating an entire line break.
            </li>
            <li>
                After the closing quotation mark of the image source you will see a tag that says alt="". This tag
                is
                for accessability. The alt tag stands for alternate text. All it is, is a sentence or 2 describing
                the
                image and/or the context of the image. It is for people that may not be able to actually be able to
                view your web-page, but would still like the full experience of it. If they are using a
                screen-reader
                this text will be read to them, otherwise it is not visible. For EVERY image on your website
                include
                the alt tag, it is not only for best practices, but also to let EVERYONE enjoy the internet and all
                the
                information on it to the fullest extent. So, make sure to always use it.
            </li>
            <li>
                Next to the alt tag you will see a specific height and width measurement. You can specify the
                dimensions of your image here or in your CSS. It is, however, best practices to specify in your
                CSS.
                You can use a few different types of measurement. The most commonly used measurements are
                px(pixels),
                cm (centimeter), mm(millimeter), and in(inch) for absolute measurements. You can use vw(view width)
                and
                vh(view height) or %(percent) for relative measurements. Relative measurements are always relative
                to
                something else on the page such as the font-size, the size of the parent (The parent is whichever
                tag
                is higher than it in the HTML hierarchy. For example the p tag would be the parent of the span tags
                within the paragraph, the div tag with the class min-div would be the parent of the p tag, and the
                body
                tag would be the parent of the div with the class min-div.), or the size of the entire viewport.
            </li>
            <li>
                The 2 br tags you see at the left side of the paragraph are for line breaks. HTML doesn't like
                white-space. Every time you want a line break you must do something such as placing a br tag,
                starting
                a new paragraph, or something akin to this.
            </li>

        </ol>
        <img id="html-tuts3" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1536678459/newHTMLtuts3.png" alt="The third section of the Basic HTML tutorial">

        <ol id="html-tuts-list3" type="A" start="21">
            <li>
                The h2 tag is the second largest and second most important h tag.
            </li>
            <li>
                The h3 tag is the third largest.
            </li>
            <li>
                The h4 is the fourth largest.
            </li>
            <li>
                The h5 is the fifth largest.
            </li>
            <li>
                Finally the h6 is the sixth largest and sixth most important.
            </li>
            <li>
                The footer tag is used, usually, to contain authorship information, sitemaps, contact information,
                navigation links, and any copywrite information. The footer tag is also important for accessability
                because it is, what is called, a sectioning element. A sectioning element makes it easier for a
                visually impaired person to know where on the web-page they are located through the use of landmark
                tags, such as the footer tag.
            </li>
        </ol>
        <ol id="html-tuts-list4">
            <li>
                The script tag is for placing JavaScript in your webpage. Any JavaScript you include in your HTML
                must
                be wrapped in opening and closing script tags. Like CSS, you can load your JavaScript from an
                external
                file (best practice), you can write it internally, either by placing it in between 2 script tags in
                the
                head of your HTML or just before your closing body tag, or you can write it inline (frowned upon)
                inside a script tag.
            </li>
            <li>
                The closing body and html tags. They are always placed in that order. The closing body tag always
                goes
                first and the closing html tag signifies the end of that webpage. There is no further content after
                the
                closing html tag.
            </li>
        </ol>

        <h2>Are there any alternatives to HTML?</h2>

        <p>No. If you want your website to be viewable online, you must write it in HTML. There are, however, other
            markup languages that compile to HTML. These languages offer different features, but mostly different
            syntax. Some of the more popular markup languages that compile down to HTML include <a href="https://www.w3.org/TR/xhtml1/">XHTML</a>,
            <a href="http://haml.info/">HAML</a>, and <a href="http://yaml.org/">YAML</a>. In the end, though, it's all
            HTML.</p>

        <h2>What other things about HTML should I know, or are important?</h2>

        <h3>HTML and accessability</h3>
        <p>Internet accessability is defined as, the inclusive practice of removing barriers that prevent interaction
            with, or access to websites, by people with disabilities. When web-sites are correctly designed, developed,
            and edited, all users have equal access of information and functionality. In other words, accessability is
            all about making sure EVERYBODY can have access to all the knowledge, opinions, and cat videos available
            online, know matter if they are disabled or not. So, make sure your website works, with not only a mouse
            and keyboard, but also with screen readers, retina devices,and any other device a disabled person might
            have to use to enjoy the internet the same as everyone else.</p>

        <p>HTML plays a big role in accessability. Some things you can do to make sure your site is accessible to
            everyone include:</p>

        <ul>
            <li>
                <h4>The alt=" " tag</h4>
                <p>
                    Make sure to always use HTML's "alt" attribute for images on your site. The alt attribute assists
                    the visually impaired, who may have to use screen-readers, to access content online. The alt
                    attribute is simply a brief sentence or 2 explaining an image and/or the context of the image and
                    what it is supposed to mean. Here is an example of how to use the alt attribute.</p>
                <img src="https://res.cloudinary.com/dmks1qdth/image/upload/v1536365003/youth-active-jump-happy-40815_1.jpg"
                    alt="Image of 2 people jumping in the air at sunset">
                <img id="ex-attr" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1536373092/accsessability.png"
                    alt="Example of alt HTML attribute tag">

                <p>It is that simple. You just link to the image inside the image tag. After the url of the image, but
                    before the closing bracket, just add alt="Description of image". Not hard at all!!, and it assists
                    people to enjoy your website.</p>
            </li>

            <li>
                <h4>Use HTML tags correctly</h4>
                <p>
                    The next way you can assist people with disabilities to be able to enjoy your websites content is
                    by only using HTML tags for what they were intended for. Let me explain what I mean by this. In the
                    late 1990's and early 2000's developers used to do things like putting all of their HTML inside of
                    a table. By doing this, they would easily be able to control the layout of their web-site and the
                    positioning of their HTML elements. Since then, there have been major upgrades to both HTML and
                    CSS. Today, doing things like that is very much frowned upon. In the present time, you should be
                    using CSS to position your elements and to design your page layout. Using HTML tags the wrong way
                    (such as using the table tag to control positioning and layout) confuses screen-readers and by
                    extension, the visually impaired person trying to navigate your website.

                    * I will be doing a full article on accessability in the coming weeks, so stay tuned to
                    codingko.com to learn all about it.
                </p>
            </li>
        </ul>

        <h3>HTML Boilerplate</h3>

        <p>While a boilerplate is not a feature built into HTML, it is a big help and a time save for developers. An
            HTML boilerplate is a pre-made basic HTML layout, either made by you, or downloaded from other developers,
            that gives you the complete basic structure of your HTML, all ready to go. It is very easy to make and
            implement one, and is a definite time saver. Here is an example of a basic HTML boilerplate.</p>

        <img id="boil" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1536367725/codingko_boilerplate.png" alt="image of an HTML boilerplate">

        <p>As you can see, it has the complete structure you would need to write a webpage. This particular boilerplate
            came as an extension on Visual Studio Code. If you create your own, you can create it specifically to how
            your HTML usually looks. As I said before, having a few different types of boilerplates can save you a nice
            amount of time.</p>

        <h3>HTML Tools and Generators</h3>

        <p>There are hundreds of HTML tools and generators available online. These can help you with any number of
            different aspects of your code. A word of advice about them though, try not to rely to heavily upon them,
            or you will not actually be learning any skills. The outcome may be what you wanted, but you will not have
            known how it got that way.</p>

        <p>An example of what I am asking you to not rely to much on is called a WYSIWYG editor, or a "What You See Is
            What You Get" editor. With these editors, you can create a website by simply dragging and dropping the
            elements you want in your website from a list of pre made elements. While this makes creating a website
            much easier, they are generally frowned upon in the developer community. Some of the common complaints
            about them are that they produce sloppy, unmaintainable code, or that the websites created by these all
            look the same. These editors can also make your site less accessible with the aforementioned sloppy code.
            With sloppy code the screen readers may have trouble navigating your site.</p>

        <p>While these editors can be helpful, in certain situations, as a beginner looking to get in to web
            development, you should steer clear of them. You should be learning how to code up a website using just
            your own know how of HTML, so you can get a broader understanding of how it all works and fits together.
            There are many other tools available online. The best way to find them is to just Google "HTML tools", or
            visit the <a href="/tools">"Useful Tools"</a> section of codingko.com, where I have listed the most useful
            tools I have found online for many languages and technologies.</p>

        <p>One last HTML tool/resource available to you online is the <a href="https://www.w3.org/">World Wide Web
                Consortium, or W3C</a>. The World Wide Web Consortium is the organization responsible for creating web
            standards, such as HTML and CSS themselves. Tim Berners-Lee (Who you may remember as the creator of HTML,
            and the person credited with creating the internet as we know it.) is the director of the World Wide Web
            Consortium, and is responsible for many of the standards they put in place. The organization does a lot of
            work, not only with web standards, but with the accessability of the internet as well. One handy tool they
            have on their website is their HTML validator. All you have to do is plug your website into the validator
            and it will check your website for accessability and HTML best practices. It is actually advisable that you
            run your website through the validator before deploying it to the internet.</p>

        <h2>What are the best resources available for learning HTML?</h2>

        <p>With any new skill you are trying to learn, including web development and computer programming, the very
            best way to learn it, is by doing. So, take a look at some of these resources and get the basics of HTML
            down, then find a project you like, and start working on it. I promise you, you will learn much quicker and
            more thoroughly this way, instead of just jumping from tutorial to tutorial. That being said, let's have a
            look at the top 3 resources for a beginner to learn HTML.</p>

        <ol id="learn-html">
            <li>
                <h3><a href="https://www.codecademy.com/">CodeAcademy</a></h3>
                <p>
                    CodeAcademy could be on this list for many different technologies and languages. They provide fun,
                    interactive, very beginner friendly courses for, not only HTML, but for CSS, JavaScript, Python,
                    Ruby, and many other languages and technologies. CodeAcademy offers both free and paid versions of
                    their courses. The paid version gets a bit more in depth, but in my opinion is not necessary. All
                    the material you need to learn web development and computer programming is available for free
                    online, you just have to know where to look. CodeAcademy's free course does a very nice job of
                    teaching you the basics. It really holds your hand at the beginning, but as you progress, that
                    stops. For almost any programming language you want to learn, CodeAcademy is a great place to
                    start.
                </p>
            </li>
            <li>
                <h3><a href="https://www.w3schools.com/">W3Schools</a></h3>
                <p>
                    There are only a couple of languages I would actually suggest learning from W3Schools, and that is
                    HTML and CSS. I only say this because W3Schools doesn't really get to in depth any lessons. I view
                    them as more of reference material, but very, very good reference material. Learning HTML, and CSS,
                    is acceptable from them though, as there is no real "logic" to the languages. They are simply
                    memorization. The W3Schools website is great for HTML because there is a lot of knowledge packed in
                    there and you can test it all out right in the browser on their site. As I said though, I ony
                    suggest learning HTML and CSS from them as these languages don't deal with logic and only deal with
                    presentation.
                </p>
            </li>
            <li>
                <h3><a href="https://dash.generalassemb.ly/">General Assembly: Dash</a></h3>
                <p>Dash, by General Assembly, is a short tutorial, but very well done and educational. Dash only deals
                    with the basics of HTML, as well as CSS and JavaScript, but like I said, they do it well. General
                    Assembly also offers paid courses, but as I stated earlier, as long as you know where to look you
                    shouldn't have to spend much money at all.</p>
            </li>
        </ol>

        <p>There you have it! The Who, What, Where, When, Why, and How's of HTML. I hope you learned something today.
            Please come back next week, as we dive into the next section of the Who, What Where When Why, and How's of
            Programming and take a look at CSS.</p>

        <p>If you would like to see any language or technology featured here, <a href="/contact-me">please feel free to
                contact me</a>. I would love to hear from you.</p>
    </div>
</div>

