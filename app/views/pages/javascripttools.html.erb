<head>
  <% title 'JavaScript Tools for Web Development' %>
  <% description 'A regularly updated list of the best JavaScript tools available for Web Development' %>
  <% keywords 'codingko, web development, computer programming, development, programming, tutorials, web development tutorials, html, css, javascript, ruby, ruby on rails, python, web development tools, programming tools, tools ,learn, learning, css, CSS, css tools, CSS tools' %>

</head>
<body>

<div class="tools-body">

  <header>
    <h1 id="jshead">JavaScript Tools for Web Development</h1>
  </header>

  <div id="tools-page">

    <p id="check-out">
      After you are done checking out the tools for JavaScript, don't forget to check out the tools for HTML
      and CSS!!!
    </p>

        <div id="all-tools-css">

      <ul id="all-tools-menu-css">

        <li><a href="/tools">Tools Home</a></li>

        <li><a href="/htmltools">HTML Tools</a></li>

        <li><a href="/csstools">CSS Tools</a></li>

      </ul>

    </div>

    <div id="tools-content">
    
    <div id="js-tools">


    <div id="js-tools-intro">

          <p>
            JavaScript is currently the most popular language available for use.  It's for good reason too!  JavaScript can do just about anything.  It's a major player in web development, and is also used in everything from A.I. to The Internet of Things (IOT).  Seeing as though the language itself is so popular and versatile, there is bound to be a lot of tools available for it, and sure enough there is.  There is a JavaScript tool for just about anything you can imagine.  So, let's hop right in and see what they are.
          </p>

        </div>

      <h2>JavaScript Frameworks / Libraries</h2>

      <p>
        To start out our JavaScript Tools section, we need to start with the 2 of the best and most used things in the entire JavaScript language, and that is JavaScripts extensive collection of quality Frameworks and Libraries.  There are many great JavaScript web development frameworks for use today, as well as JavaScript libraries.  JavaScript web development frameworks are some of the highest quality and most used frameworks in existence and there are too many JavaScript Libraries to count.  In this section, though, I only want to cover a few of the libraries that are most important and are actually comparable to frameworks.  JavaScript frameworks and the libraries I am about to talk about are very similar, but they do have a few key differences.  The main difference that differentiates a JavaScript framework from a JavaScript library is that with a JavaScript web development framework, you have to start your project within that framework.  Where as with a JavaScript library, you can insert it into your project at any time.  In fact, many web developers will use JavaScript libraries within a JavaScript framework.  One other difference between a library and a framework is that with a framework, your project is built within it.  A library is more of a collection of components that you can insert into your project.
      </p>

        <ul>
          <li>
            <h3><a href="https://angular.io/" target="_blank" rel="noopener">Angular</a></h3><img class="floater" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1542151782/angular.png" alt="Angular Logo">
            <p>
              Angular is a front-end JavaScript web development framework.  It has been one of JavaScript most popular frameworks for many years now, and despite giving up its number 1 spot in JavaScript framework's popularity is still consistently ranked in the top 3, year after year.  It uses an MVC (Model, View, Controller) architecture that makes developing web applications a breeze.  If you're a beginner to web development or to JavaScript frameworks, than Angular is a good option.  Since it's one of the most popular frameworks available for web development, there is a HUGE amount of documentation and learning material available online.  Angular is also maintained by Google, so you know it's always being worked on and given new features.
            </p>
          </li>
          <li>
            <h3><a href="https://vuejs.org/" target="_blank" rel="noopener">Vue</a></h3><img class="floater" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1542151791/Vue.png" alt="Vue Logo">
            <p>
              A relative newcomer to the JavaScript framework game, Vue has made quite the impression on web developers.  Since its inception in 2014, it has risen through the ranks of frameworks to become the number 2 JavaScript framework with 84,000 stars on GitHub.  This popularity is, much, due to the fact that it is a much simpler and easy to use framework, when compared to other JavaScript frameworks.  Vue is viewed as extremely beginner friendly, and doesn't force you to learn a whole new language or have a lot of new syntax.  If you know HTML, CSS, and some JavaScript, than you will be able to build some incredible web applications, swiftly and efficiently, with Vue.
            </p>
          </li>
          <li>
            <h3><a href="https://reactjs.org/" target="_blank" rel="noopener">React</a></h3><img class="floater" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1542151799/react.png" alt="React Logo">
            <p>
              ReactJS is a component-based javascript library which is used for building an interactive and dynamic user interface for websites and mobile applications.  Currently it is the #1 most popular JavaScript library / framework available for use in web development.  The React library is used for front-end development through the use of React components.  In React EVERYTHING is a component that is strung together to complete an entire view.  React makes creating web applications much quicker and more efficient than many other options and since it's a library instead of a framework, it can be inserted into your project at any time.  Also, since it's a library, you can use only the components you want to use, instead of having your project weighed down with unnecessary code.
            </p>
          </li>
          <li>
            <h3><a href="https://expressjs.com/" target="_blank" rel="noopener">Express.js</a></h3><img class="floater" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1542152051/express.jpg" alt="ExpressJS Logo">
            <p>
              Express.js is a back-end JavaScript framework for web development, built on top of Node.js.  Node.js is the hugely popular JavaScript Runtime that has enabled JavaScript developers to move their skills to the server-side of their web applications in addition to the client-side.  Express puts the "E" in the MEAN web development stack (MongoDB, Express, Angular, Node), which is one of the most popular stacks used by web developers today.  Express, in my opinion, is not super beginner friendly, and a solid grasp of JavaScript id definitely recommended, but if you already know JavaScript pretty well, or are willing to put the work in to learn it, then Express is a great option for a back-end framework.
            </p>
          </li>
          <li>
            <h3><a href="https://www.meteor.com/" target="_blank" rel="noopener">Meteor</a></h3><img class="floater" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1542151806/meteor.png" alt="Meteor.js Logo">
            <p>Meteorjs is a full-stack JavaScript framework, meaning, unlike Express and the MEAN stack, it comes bundled with everything you will need to build robust and scalable web applications right out of the box.  It runs Blaze.js as its front-end framework, but you can integrate a different front-end framework if you choose.  Another awesome feature of Meteor is that it makes turning your web application into an Android or Iphone app very simple.  Meteor is integrated with a mobile app building platform called Cordova, so if you're using Meteor, you already have the functionality built in to create applications for all platforms.  Overall, as a full-stack solution, Meteor shines.</p>
          </li>
          <li>
            <h3><a href="https://www.emberjs.com/" target="_blank" rel="noopener">Ember</a></h3><img class="floater" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1542151774/ember.jpg" alt="Ember Logo">
            <p>
              Ember.js is a front-end JavaScript web development framework.  Its supporters claim that if you're a fan of Ruby on Rails (The EXTREMELY popular Ruby web development framework), then you will love Ember.js as they have many of the same features.  2 of these features are "Convention over Configuration" and "DRY (Don't Repeat Yourself)".  Convention over configuration simply means that it takes care of a lot of the boring repetitive tasks for you.  Some developers don't like this as they want to be in control over every aspect of their web application, while supporters of convention over configuration claim "There is no need to reinvent the wheel".  Personally, I am a fan of convention over configuration.  I am fine with letting Ruby on Rails or Emberjs performing a little bit of magic behind the scenes, and making my job as a developer a little bit easier.  The DRY principle is simple enough to understand.  By not having to continually have to re-write the same code over and over, you are saving time to work on the things that matter most.  So, if you are OK with you're framework performing a bit of magic in the background and allowing you to work on your project, then Ember could be the right framework for you.
            </p>
          </li>
        </ul>

      <div id="JQuery">
        <p id="jquery-bonus">Bonus!!</p>
        <h3><a href="https://jquery.com/" target="_blank" rel="noopener">JQuery</a></h3><img class="floater" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1542212620/jquery.png" alt="JQuery Logo">
        <p>JQuery is the HUGELY popular JavaScript library for making interactive web components.  JQuery has been around for many years now, and even though recently it has seen its popularity drop a bit, it is still one of the most widely used JavaScript libraries available.  JQuery, in a nutshell, is basically a way to shorten your JavaScript code.  It creates a way to turn, what might take you 4 lines of JavaScript, into 1 line of JQuery code.  I didn't put it with the rest of the frameworks / libraries because even though it is used for web development, you can't use it to build an entire website like the other ones.  It is more like a seperate programming language than a web development framework.</p>
      </div>

      <p>These are only a few of the more popular JavaScript web development frameworks and libraries.  There are hundreds more to choose from if none of these fit your needs.  Below I will list off a few more libraries and frameworks, but even then, I will barely be scratching the surface of the amount of them available.</p>

      <ul>
        <li>
          <h3><a href="https://aurelia.io/" target="_blank" rel="noopener">Aurelia</a></h3>
        </li>
        <li>
          <h3><a href="https://stimulusjs.org/" target="_blank" rel="noopener">Stimulus</a></h3>
        </li>
        <li>
          <h3><a href="https://flightjs.github.io/" target="_blank" rel="noopener">Flight (By: Twitter)</a></h3>
        </li>
        <li>
          <h3><a href="https://gojecks.github.io/" target="_blank" rel="noopener">JELI</a></h3>
        </li>
        <li>
          <h3><a href="http://trykickoff.com/" target="_blank" rel="noopener">Kickoff</a></h3>
        </li>
        <li>
          <h3><a href="https://feathersjs.com/" target="_blank" rel="noopener">Feathers</a></h3>
        </li>
        <li>
          <h3><a href="http://jaggeryjs.org/" target="_blank" rel="noopener">Jaggery</a></h3>
        </li>
        <li>
          <h3><a href="https://mithril.js.org/" target="_blank" rel="noopener">Mithril</a></h3>
        </li>
        <li>
          <h3><a href="http://www.qooxdoo.org/" target="_blank" rel="noopener">Qooxdoo</a></h3>
        </li>
        <li>
          <h3><a href="http://sammyjs.org/" target="_blank" rel="noopener">Sammy.js</a></h3>
        </li>
        <li>
          <h3><a href="https://www.polymer-project.org/" target="_blank" rel="noopener">Polymer</a></h3>
        </li>
        <li>
          <h3><a href="https://sailsjs.com/" target="_blank" rel="noopener">Sails.js</a></h3>
        </li>
      </ul>

        <h2 id="head-2">JavaScript Animation Libraries and Tools</h2>

      <ul>
      <li>
        <h3><a href="http://velocityjs.org/" target="_blank" rel="noopener">Velocity.js</a></h3><img class="floater" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1541521578/velocity.jpg" alt="Velocity.js logo">
        <p>Velocity.js is meant to be a replacement for the JQuery function $.animate().  It advertises that JavaScript is falsely accused of being slow and that in reality, it is JQuery that is slow.  Velocity.js makes your animations run much faster, as compared to JQuery and is just as easy to implement.  You simply put $.velocity() in place of JQuery's $.animate() and your animations will be given a nice performance boost.</p>

      </li>
      <li>
        <h3><a href="http://animejs.com/" target="_blank" rel="noopener">anime.js</a></h3><img class="floater" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1541522977/animejs.png" alt="anime.js logo">
        <p>
        Anime.js is advertised as "a flexible yet lightweight JavaScript animation library. It works with CSS, Individual Transforms, SVG, DOM attributes and JS Objects."  Anime.js was created to be a very lightweight animation library to add to your project.  It can give you additional features that you may not be able to achieve with CSS alone.  However, if you are trying to make large scale animations, you may be better suited looking elsewhere.
        </p>
      </li>
        <li>
          <h3><a href="http://bouncejs.com/" target="_blank" rel="noopener">Bounce.js</a></h3><img class="floater" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1541781545/bounce-js-CSS-Animation-logo.png" alt="Bounce.js Logo">
          <p>
            Bounce.js is another tiny JavaScript animation library.  It only comes with 10 preset animations out of the box, but they are smooth and flawless animations.  Bounce.js focuses more on small animations such as fade ins, fade outs, and obviously bounces.  If you just need to liven up your website a bit with some small animations, then Bounce.js could be the library for you.
          </p>
        </li>

        <li>
          <h3><a href="" target="_blank" rel="noopener">D3.js</a></h3><img class="floater" src="https://res.cloudinary.com/dmks1qdth/image/upload/c_scale,w_501/v1541896886/d3.png" alt="D3.js Logo">
          <p>
            D3.js has been one of JavaScripts most used and popular animation libraries for a long time.  It is geared much more at 3d animations, but the animations you can make with D3.js are stunning.  D3.js is a bit more advanced than the rest of the libraries, but if web design is more your thing, then you have to give D3.js a go.  Because it is a bit more advance you will probably want to watch or read through a few tutorials. <a id="id-link" href="https://square.github.io/intro-to-d3/" target="_blank" rel="noopener">Here</a> are a <a id="id-link" href="https://www.dashingd3js.com/table-of-contents" target="_blank" rel="noopener">few</a> of <a id="id-link" href="http://www.tutorialsteacher.com/d3js" target="_blank" rel="noopener">them</a> to get you started.
          </p>
        </li>

        <li>
          <h3><a href="http://anijs.github.io/" target="_blank" rel="noopener">AniJS</a></h3><img class="floater" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1541803167/anijs.png" alt="AniJS Logo">
          <p>
            AniJS is a different type of JavaScript animation library, to be sure.  You can do all the stuff you can do with the other libraries, but it is meant to be a low-code library.  In order to use AniJS you have to use its special syntax and language system, which is meant to be structured more like an English sentence rather than code.  To use the animations you use words such as "if", "when", and "do", among others, to get the animations to do what you want.  It's definitely a different take on JavaScript animations, and it's definitely worth checking out.
          </p>
        </li>

        <p>Those 5 JavaScript animation libraries are just some of the more popular ones.  JavaScript has many more animation libraries available.  There is one available for basically every need.  So, if the preceding 3 don't fit your needs, check out one of the following libraries, one is sure to be just what you need.</p>

        <li>
          <h3><a href="https://github.com/mrdoob/three.js/" target="_blank" rel="noopener">Three.js</a></h3>
        </li>
        <li>
          <h3><a href="https://github.com/legomushroom/mojs" target="_blank" rel="noopener">MO.js</a></h3>
        </li>
        <li>
          <h3><a href="https://github.com/maxwellito/vivus" target="_blank" rel="noopener">Vivus</a></h3>
        </li>
        <li>
          <h3><a href="https://github.com/greensock/GreenSock-JS" target="_blank" rel="noopener">GreenSock JS</a></h3>
        </li>
        <li>
          <h3><a href="https://github.com/scrollreveal/scrollreveal" target="_blank" rel="noopener">Scroll Reveal</a></h3>
        </li>
        <li>
          <h3><a href="http://thednp.github.io/kute.js/index.html" target="_blank" rel="noopener">Kute JS</a></h3>
        </li>
        <li>
          <h3><a href="https://github.com/mattboldt/typed.js" target="_blank" rel="noopener">Typed.js</a></h3>
        </li>
    </ul>
    </div>
    </div>
  </div>

</div>

