<head>
	<% title "The Who, What, When, Where, Why, and How's of CSS" %>
	<% description 'A close examination of everything about CSS.  From what it is used for to how it works to the best places to learn it.  Also, a tutorial on the bare minimum of CSS you need to know to create a basic web page.' %>
	<% keywords 'codingko, web development, computer programming, development, programming, tutorials, web development tutorials, html, css, javascript, ruby, ruby on rails, python' %>
</head>

<div class="css-body">
    <header>
        <h1 id="css-head">The Who, What, When, Where, Why, and How's of CSS</h1><br>
        <h4 id="css-by">By: Kenneth Olsen</h4>
    </header>

    <p id="css-intro">Hello! Welcome two part 2 of the "Who, What, When, Where, When, Why, and How's of Programming".  Last time, we took a deep dive into HTML and learned, in depth, all about it.  From who created it, to how it works, to the best places to learn it.  This week, we are going to take a look at the second pillar of the internet, CSS.  Now that introductions are out of the way, LET'S GET GOING!</p><br>

    <h2>What is CSS?</h2>

        <p>
            CSS stands for Cascading StyleSheets.  It is used for describing the presentation of a document written in HTML.  If you remember from part 1 in the Who, What, Where, When, Why, and How's of Programming, which was about HTML, I used the metaphor for the big 3 pillars of the internet (HTML, CSS, JavaScript) being like a house.  The HTML was the foundation and structure, or the 2x4's and concrete slab.  JavaScript was the electrical and wiring, making the house dynamic.  Just as JavaScript makes websites dynamic by adding things such as forms, user profiles and anything else that gives it functionality.  Finally, the CSS was the paint, decorations, and furnishings.  It is the presentation of the structure of the house.  Just as CSS is the presentation of the HTML of a website.  CSS is every color, font-size, border, and background-image, as well as pretty much anything else that could be considered a decoration or style.  CSS also positions your HTML elements and makes websites responsive (mobile-friendly).  As you can see, CSS is very important to the internet we know and love today.
        </p>

    <h2>Who created CSS?</h2>

        <p>
            Hakon Wiiam Lie is credited with creating CSS.  Though Wiiam Lie is credited as CSS's creator, he had help from many others, including the Godfather of the internet itself and the creator of HTML, Tim Berners-Lee.
        </p>

    <h2>When was CSS created?</h2>

        <p>
            CSS was first proposed in 1994, and was first released in 1996.  There are 3 levels of CSS that were released in that time(CSS, instead of coming out with new versions, comes out with new levels.  Each new level just adds to what is already there from the previous level.).  The original CSS in 1996, CSS2 in 1997, and the most current level, CSS3, which was drafted in 1999.  We may be stuck with CSS3 for awhile because it seems that the people responsible for CSS, the World Wide Web Consortium, may not be releasing new levels of CSS anymore.  There will be, however, level 4 selectors, some of which are already in use.  Instead of releasing new levels, they will just be continuously releasing a steady stream of new selectors, as they become available.
        </p>

    <h2>What iss CSS used for?</h2>

        <p>
            As we have already mentioned, CSS is used to describe the presentation of a web page (HTML).  CSS also has some other VERY important functions though.  It is used for positioning your HTML elements, which helps with your sites accessability.  CSS also plays a big role in making your web site responsive (mobile-friendly) through the use of media queries.  CSS's uses in these areas may actually be more important than it's ability to decorate your web page with different colors, fonts, borders, and the like.
        </p>

    <h2>Why use CSS?</h2>

        <p>
            As with HTML, you use CSS because you don't really have another option.  There are CSS preprocessors, which we will cover shortly, that can give your CSS added functionality, but even with these preprocessors you are still writing CSS in the end.
        </p>

    <h2>How does CSS work?</h2>

        <p>
            CSS, like HTML, is a set of instructions for your web browser.  These instructions, or rules, can be written either in-line with style tags. <span style="color=red">(Now my text is Red).</span>  It can also be written internal.  Internal CSS is written in between the opening and closing HTML head tags.  Lastly, and the most preferred way to write your CSS, is in an external stylesheet, which is linked to in the head of your document.  External stylesheets are prefered because putting your CSS inline or in the head of your document can make your HTML look very cluttered and hard to understand.  You want to make sure everything is as easy to understand as possible, so that if another web developer, or even yourself, wants to come along and view the source or make corrections, your source code will be easy to navigate.  After you have written your CSS and are ready to view your website online, your CSS file will give instructions to your web browser to update the HTML on your webpage according to the values you wrote in your CSS.  In order to create a CSS value, or rule, you need to use, what is called, a CSS selector.  A CSS selector is a special ID or class that you specified in your HTML. An example of this is
            
            !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            
            That example takes an HTML DIV element with the id of mySelector and colors it blue based on the rule that was wrote for it in the CSS file.  For styling a single HTML element you will want to use the id selector 'id="idSelector"' on your HTML element and in your CSS file you call that id by using an octothorpe "#" before the name of the selector.  In this case it would look like #idSelector {color: someColor;}.  If you want to style multiple elements than use the HTML class selector 'class="classSelector"' and in your CSS file you will put a period "." before calling your class name.  In thins case it would be .classSelector {color: someColor;}.  There are many other types of CSS selectors, these are just the 2 that are used most often.  You can specify a type of HTML element such as "span" in your CSS file and the rules you set will apply to every "span" in your document or to style all HTML elements you can put "*", and every single HTML element will be styled according to the rule you set for it.
        </p>
            
    <h2>What are the most important things to know about CSS?</h2>
    
        <h3>Responsive Design with CSS</h3>

            <p>
                In todays world, it is extrememly important to optimize your web application for ALL devices and device sizes.  Almost half of all internet traffic is through smart-phones and tablets!  If your website is not mobile friendly, then you are going to miss out on ALOT of traffic.  CSS play a pivitol role in mobile responsiveness through the use of media queries and breakpoints.  (Just a shameless plug, but make sure you frequest codingko.com, as in the coming weeks I will be doing a full tutorial on responsive design).  A brief explanation of media queries is that, through the use of a CSS media query selector, you can change anything you want oon your webpage in order to make sure that it can be viewed on multiple devices.  Here is an examle of media queries in action, !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                Pretty cool, am I right?
            </p>

        <h3>Animation with CSS</h3>

            <p>     
                It used to be, that if you wanted to use animations on your website, you would have to use JavaScript.   While this is still true to a certain extent, for simpler animations you can now use CSS.  To use CSS to make animations, you need to use the CSS @keyframe selector.

                !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            </p>

        <h3>Accessibility with CSS</h3>
        
            <p>
                Arguably the biggest role CSS plays in web development, other than decorating HTML, is with accessibility.  If it hasn't been drilled into your head yet, accessability is extrememly important.  Everyone, no matter if they have a disability or not, should be able to enjoy all the information, knowledge, opinions, entertainment, and cat memes available online.  One of the ways CSS assists with accessibility is through the use of external stylesheets.  By linking to your CSS externally in the head of your HTML, you can make it much easier for screen reading devices to navigate your website.  Inline CSS clutters up your HTML and can trick screen readers into reading your CSS rules instead of your actual content.  This not only helps people with disabilities, but also can help you, or another web developer, if they or you need to sift through your source code for any reason.  So, this is yet another great reason to link externally to your CSS stylesheet.
            </p>
            <p>
                CSS can also help with accessibility by allowing you to precisly control word, letter, and line spacing.  As well as font size, weight, color, and a multitude of other things that can help the visually impaired enjoy your content.  Back in the old days, CSS was strictly used for decoration.  Web developers, at the time, used HTML tables to position much of their content.  HTML tag misuse, such as the prior table example, makes it nearly impossible for screen reading devices to navigate your content.  Screen readers are just machines that read whatever the computer is telling it to read.  So, if you use a table to position elements, what do you think happens?  That's right!  It will read the content in that HTML table as though it was in an actual table.  Always use CSS for positioning your HTML elements.  Use the HTML tags for what they were made for and everyone will be able to enjoy your content.
            </p>
            <p>
                Bothe HTML and CSS have many more accessability features.  I have only listed some of the bigger ones in order to keep this as brief as possible.  However, in the coming weeks, I will be doing a full blown explanation and tutorial on accessability.  So make sure you stay tuned to codingko.com to learn all about it.  I would be remisce, however, if I did not mention the World Wide Web Consortium.  They are responsible for coming up with all the web standards in use today, including accessability standards.  So, if you want to read up more on accessability right now, visit the <a href="https://www.w3.org/" target="_blank" rel="noopener">World Wide Web Consortium</a> at their website and learn all about it.  Don't worry about me, I will be right here when you get back.
            </p>

    <h2>What is the very minimum amount of CSS needed to create a basic website?</h2>

            <p>
                Technically speaking, you could create an entire website with any CSS at all.  That website, however, woudl not look or perform very well at all.  For the most part, though, we have already covered the minimum amount of CSS you would need to know to create a very basic website.  For the sake of continuity, we will run down the list and add a few more things.
            </p>
            <p>
                The very first thing you should know about CSS to create a basic website is how to create and link to an external stylesheet.  If you need a quick refresher, all you need to do is create a seperate file inside the same directory as your HTML file.  Let's just name ours styles.css.  Now that you have created your seperate sty;esheet, you need to link to it in between the openeing and closing head tags in your HTML.  Here is a short example,
                
                !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            </p>
            <p>
                The next thing you should know about CSS to get a website, with some basic styling, up and going is the CSS syntax to use in that seperate stylesheet. (The same syntax applies for inline CSS, but we want it to be good for accessability, RIGHT?  Same syntax applies for internal CSS as well.  You remember, that was the rules inside the head of your HTML.)  

                !!!!!!!!!!!!!!!!!!!!!!!SHOW FULL STYLESHEET EXAMPLE, LIKE YOU DID WITH HTML!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            </p>
            <p>
                You will also want to know about the different types of CSS selectors and how to use them.  The most commonly used selectors are, in order of specificity (HOLY CRAP!!  I can't believe I haven't mentioned this yet, but the reason it's call "CASCADING Stylesheets" is because the CSS rules cascade downward.  Meaning if an HTML element falls under multiple CSS rules, the selector that is more specific to that element wins.  "." class selector is more specific than "*" universal selector, "#" id selector is more specific than "." class selector, etc.) the universal selector "*" which is an asterisk will style alllll of the HTML elements.  The type selector is the next most specific.  To use the type selector you just put the type of HTML you want to style.  Some HTML element types include H1-H6, div, span, p, etc.  The class selector ".", which is a period or decimal point, is the next most specific CSS selector.  With the class selector, you can style any number of HTML elements as long as you have assigned those elements a class name in your HTML.  In order to assign a class to your HTML elements you need to first know which elements you are going to style.  Then, inside the openeing and closing brackets of the opening tag of the HTML element you want to style just type class="yourClassName" and BOOM, you just assigned a class to an element.  Now you can assign that same class to as many elements as you want and they will all be styled the same.
            </p>


    
    
        
