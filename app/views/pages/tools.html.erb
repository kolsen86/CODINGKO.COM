<!doctype html>

<head>
	<% title 'Tools for Web Development and Computer Programming' %>
	<% description 'The best tools, generators, text-editors, and IDEs available online for any language or technology' %>
	<% keywords 'codingko, web development, computer programming, development, programming, tutorials, web development tutorials, html, css, javascript, ruby, ruby on rails, python, web development tools, programming tools, tools ,learn, learning' %>

</head>

<div class="tools-body">

	<header>
		<h1 id="tools-head">Useful Tools for Web Development and Computer Programming</h1>
	</header>

	<ul class="tools-menu">

		<li>
			<%= link_to "Tutorials Home", tutorials_path %>
		</li>

		<li>
			<%= link_to "Interactive Tutorials", inttutorials_path %>
		</li>

		<li>
			<%= link_to "Book Tutorials", booktutorials_path %>
		</li>

		<li>
			<%= link_to "Video Tutorials", videotutorials_path %>
		</li>

		<li class="slider"></li>

	</ul>

	<ul class="tools-menu2">

		<li>
			<%= link_to "MOOC Tutorials", mooctutorials_path %>
		</li>

		<li>
			<%= link_to "Paid Tutorials & Pathways", paidtutorialsandpath_path %>
		</li>

		<li>
			<%= link_to "Reference & Questions", referanceandquestions_path %>
		</li>

		<li>
			<%= link_to "Useful Tools", tools_path %>
		</li>

		<li class="slider2"></li>

	</ul>

	<div id="tools-page">

		<h2 id="tools-intro-header">Useful Tools for Programming and Development</h2>

		<div id="tools-intro">

			<p>
				The right tools can make or break a computer programmer or web developer. They can cut your time spent developing
				in half, solve
				common issues, or make your product really stand out. There are tools for every language and technology. This list
				will be continuously upgraded as I find tools that will help to make your (and my) life easier.
			</p>

		</div>

		<div id="all-tools">
			<ul id="all-tools-menu">
				<li><a href="/htmltools">HTML Tools</a></li>
				<li><a href="/csstools">CSS Tools</a></li>
			</ul>
		</div>

		<div id="tools-content">

			<h2 id="tools-intro-header1">Text-Editors and IDEs (Integrated Development Environments)</h2>

			<div id="tools-intro1">

				<p id="editor-intro">
					A necessary tool in any programmers or developers toolbox, text-editors and IDEs are where you will do most of
					your programming.
					There are both downloadable text-editors or IDEs and ones you can use in your browser online. There are also free
					or paid versions of both. As a beginner to web development or computer programming, I would recommend using the
					free ones, but as you progress, if you would
					like to try out a paid one that has more bells and whistles, then more power to you. Briefly, I would like to
					point out the difference between an IDE and a text-editor. A text-editor is sort of general purpose. It can be
					used for multiple languages through the use of plug-ins. It can also be used for debugging and compiling with the
					right plug-ins, but none of these features come with it. An IDE, on the other hand, is usually geared towards a
					particular language and comes with all the extensions, debuggers, and compilers among other things, that you would
					ever need for that particular language. IDEs, also, usually have a much larger file size, and depending on your
					machine can be slow and laggy. Ok! Enough with the intro's. Let's get into some tools.<br> <span>*As a side note,
						many of these offer the same features. It is totally up to the programmer, which to use. So, I am only going to
						give a description if there is some feature that sets it apart from the others.*</span>
				</p>

			</div>

			<ul>

				<li>

					<h2><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">
							Visual Studio Code
						</a></h2><img class="floated" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1531579248/vscode-min.png"
					 alt="Visual Studio Code Logo" title="My personal favorite.">


					<p>
						Visual Studio Code is my personal favorite. It has all the feature you could ever want, and could be considered
						closer to a full blown IDE (with extensions) than a text editor. Visual Studio Code has thousands of extensions,
						created by both professional companies and regular users, for everything you could possibly need or want. They
						have extensions for every language, linters, guides, beautifiers, uglifiers, intellisense, different themes,
						color schemes, syntax highlighting, bracket matchers, file icon packs, etc. They also provide more features right
						out of the box than any of the other editors. It is also updated regularly. Really, the only complaint that I
						have really ever seen is that it is made by Micrsoft. Some people just hate Microsoft with a passion, for reasons
						I have never really understood.
					</p>

				</li>

				<li>
					<h2><a href="https://www.sublimetext.com/" target="_blank" rel="noopener">
							Sublime Text
						</a></h2><img class="floated" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1531606572/sublime.jpg" alt="Sublime Text Logo"
					 title="Highly recommended">

					<p>
						Sublime text is a very popular text editor. Almost every "beginners" tutorial you see will recommend it. Some of
						the pros for Sublime text are it's <a href="https://blog.xinhong.me/post/sublime-text-vs-vscode-vs-atom-performance-dec-2016/"
						 rel="noopener" target="_blank">speed</a>, performance, and packages(extensions). The main drawback with Sublime
						is that, while you can use it for free, it costs 70 dollars to activate the license for it. If you use it without
						the license activated you have to deal with a very annoying nag window.
					</p>

				</li>

				<li>

					<h2><a href="https://atom.io/" target="_blank" rel="noopener">
							Atom Text Editor (Made by GitHub)
						</a></h2><img class="floated" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1531618310/atom.png" alt="Atom Logo"
					 title="By the people at GitHub">

					<p>The Atom text editor, by the people at GitHub, bills itself as "A hackable text editor for the 21st century".
						The main feature of Atom is that "hackable" part. It is written in plain HTML, CSS, and JavaScript and they
						provide you with all the files you need to truly customize it. The main drawback of Atom is that it does not
						handle large files well, and can take up more system resources than other editors.</p>

				</li>

				<li>

					<h2><a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener">
							NotePad++ (only for Windows)
						</a></h2><img class="floated" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1531618309/notepad.png" alt="NotePad++ Logo"
					 title="Barebones text-editor">

					<p>
						Notepad++ is a pretty bare bones text-editor. It does have plug-ins available for it, but not nearly as many as
						some of the others. If simplicity is your thing, then Notepad++ is for you.
					</p>

				</li>

				<li>

					<h2><a href="http://brackets.io/" target="_blank" rel="noopener">
							Brackets (Made by Adobe)
						</a></h2><img class="floated" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1531618310/brackets.png"
					 alt="Brackets Logo" title="By the people at Adobe">

					<p>
						If your strictly a front-end developer or a web designer that also codes, then Brackets (By: Adobe) is the editor
						for you. Since it is made by Adobe, it integrates very easily with other Adobe products, such as the uber popular
						Adobe Photoshop. However, if you do more computer programming than web development, you may want to look
						elsewhere, as Brackets is not suited well for actual programming.
					</p>

				</li>

				<li>

					<h2><a href="https://netbeans.org/" target="_blank" rel="noopener">
							NetBeans
						</a></h2><img class="floated" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1531618309/netbeans.png"
					 alt="NetBeans Logo" title="I heard it makes you fart!">

					<p>
						NetBeans is our first full Integrated Developer Environment (IDE). As an IDE, it is best suited for developers
						that work with a few specific languages. The languages NetBeans excells in are Java, JavaScript (CSS and HTML as
						well), and PHP. The main selling point of NetBeans is that, for those specific languages, it comes with
						professional grade debuggers, refactorers, code completion, etc. Basically it comes with everything you would
						ever need for those languages, without having to sift through extension after extension to find what you are
						looking for. However, with NetBeans being a full blown IDE, it has a large file size. Because of the large file
						size it can get aggravating to work with, as it can get slow and laggy (Depending on how much space and RAM you
						have available on your machine).
					</p>

				</li>

				<li>

					<h2><a href="https://codepen.io/" target="_blank" rel="noopener">
							Code Pen
						</a></h2><img class="floated" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1531618309/codepen.png" alt="Codepen Logo"
					 title="Great place for inspiration too!">

					<p>
						Code Pen is our first online text-editor. These are usually only for developing in HTML, CSS, and JavaScript.
						They don't allow for plug-ins, but they do come with some extra features. Code Pen is the most used of the online
						editors and is a fantastic product for whipping up some fast code.
					</p>

				</li>

				<li>

					<h2><a href="https://jsfiddle.net/" target="_blank" rel="noopener">
							JS Fiddle
						</a></h2><img src="https://res.cloudinary.com/dmks1qdth/image/upload/v1531618309/jsfiddle.png" alt="JS Fiddle Logo">

				</li>

				<li>

					<h2><a href="http://jsbin.com/?html,output" target="_blank" rel="noopener">
							JS Bin
						</a></h2><img src="https://res.cloudinary.com/dmks1qdth/image/upload/v1531618309/jsbin.png" alt="JS Bin Logo">

				</li>

				<li>

					<h2><a href="https://next.plnkr.co/" target="_blank" rel="noopener">
							Plunker
						</a></h2><img src="https://res.cloudinary.com/dmks1qdth/image/upload/v1531618309/plnkr.png" alt="Plunker Logo">

				</li>

				<li>

					<h2><a href="https://codeanywhere.com/" target="_blank" rel="noopener">
							CodeAnywhere
						</a></h2><img src="https://res.cloudinary.com/dmks1qdth/image/upload/v1531618310/codeanywhere.png" alt="CodeAnywhere Logo">

				</li>

				<li>

					<h2><a href="https://c9.io/login" target="_blank" rel="noopener">
							Cloud 9
						</a></h2><img src="https://res.cloudinary.com/dmks1qdth/image/upload/v1531618310/cloud9.png" alt="Cloud 9 Logo">

				</li>

			</ul>

			<div id="tools-frameworks">

			<div id="frameworks-intro">
				<h2 class="framework-head">Frameworks for Web Development</h2>
					<div class="framework-intro">
				<p>
					Web developers don't like wasting time. The quicker and more efficiently they can develop websites the better. Web
					development frameworks can drastically cut down the time it takes to create a website, while also making its
					creation much more efficient. Web development frameworks achieve this by automating many of the redundant
					processes that web developer used to have to type out for every single projects they started. Frameworks also
					force better organization on web developers by providing you with a clear hierarchy of files and folders right out
					of the box. There are 2 types of frameworks available for web developers, front-end and back-end. Front-end
					frameworks tend to focus on the layout and design of your web application, while back-end frameworks make it much
					simpler to deal with things such as, routing, http headers, and rendering data, among other things. Both can be a
					huge asset to a web developer, and a great addition to your web development tool-box.
				</p>
				</div>

				<h3 class="framework-head2">Front-End Web Development Frameworks</h3>
					<div class="framework-intro">
				<p>
					A front-end web development framework saves web developers time and energy by giving them a basic structure on
					which to build their web application. A front-end framework lays the groundwork for the web developer by providing
					a grid structure, source code that makes sure their web website or web application has no cross-browser
					compatibility issues, and a pre made set of classes they can inject into their HTML to achieve different styles
					and functionalities. Many front-end frameworks offer solutions for responsiveness, making the creation of websites
					that work on all devices and screen sizes much easier and quicker. These web development frameworks also provide
					you with different components such as navigation menus, breadcrumbs, pagination, headers, footers, etc. all
					pre-built and ready to put directly into your project.
				</p>
					</div>
				<ul>
					<li>
						<h2 class="framework-head"><a href="https://getbootstrap.com/" target="_blank" rel="noopener">Bootstrap</a></h2>

						<p class="p1">
							Bootstrap by Twitter is, by far, the most popular and used front-end web development framework available today.
							In 2010, Bootstrap became the first modern day front-end framework. It kicked off the trend of mobile
							first-design (Mobile-first design is the process of designing your web app from the ground up. First designing
							for mobile phones, then tablets, all the way up to PC monitors.), which has become one of the most important
							aspects of web development and design in recent years with smartphones becoming many peoples preferred way of
							accessing the internet.
						</p>

						<p>
							Bootstrap comes with a ton of features, right out of the box, that helps web developers create stunning and
							sleek, responsive websites, rapidly and efficiently. Some of these features include,
						</p>

						<ul class="list-nest">

							<li>

								<h3 class="framework-head2">Its FlexBox based grid system</h3>

								<p>
									A good grid system is important for many reasons, including making creating responsive websites much easier.
									Bootstraps grid system was created to be "mobile-first", so it allows you to quickly and easily scale up your
									website from a small mobile screen, all the way up to super high resolution computer monitors. The grid is
									composed of 12 columns and allows you to specify exactly how much screen space you want to give each element.
								</p>

							</li>

							<li>

								<h3 class="framework-head2">Easy to Use</h3>

								<p>
									Anyone with a basic understanding of HTML, CSS, and JavaScript should be able to start using Bootstrap right
									away.
								</p>

							</li>

							<li>

								<h3 class="framework-head2">Pre-Built Components</h3>

								<p>
									There is a huge amount of pre-built components ready to use for Bootstrap. You can copy and paste many of
									them straight from Bootstraps website. Also, there are thousands more available from 3rd party websites and
									from other users of Bootstrap that have put their code snippets online.
								</p>

							</li>

						</ul>
					</li>

					<li>

						<h2 class="framework-head"><a href="https://foundation.zurb.com/" target="_blank" rel="noopener">Foundation</a></h2>

						<p class="p1">Foundation by Zurb has, year after year, placed second in popularity to Bootstrap. This doesn't mean it places
							second when it comes to features and usability though. As a matter of fact, Foundation and Bootstrap are quite
							similar, with just a few differences. When it comes to picking any we development framework it all just comes
							down to preference and the comfort level the developer has with it.</p>

						<p>Some of the differences and features that set Foundation apart from Bootstrap include,</p>

						<ul class="list-nest">

							<li>

								<h3 class="framework-head2">Floated Grid System</h3>

								<p>
									Foundation uses a floated grid system, as opposed to the Flex-Box style grid system Bootstrap uses. Although,
									by tweaking Foundations SCSS file, you can also configure Foundation to use Fle-Box for a grid. Foundations
									floated grid gives it a few features that you don't get with Bootstrap such as centered columns, responsive
									gutters, and fluid rows.
								</p>

							</li>

							<li>

								<h3 class="framework-head2">Highly Customizable</h3>

								<p>
									Foundation makes some assumptions about the developers using their framework. While Bootstrap is very beginner
									friendly, Foundation is a bit less so. It assumes its users are a bit more advanced in their skill level. This
									can be both good and bad. If your relatively new to the world of we development, than you could have a bit
									more trouble using Foundation as opposed to Bootstrap. Bootstrap comes with certain styles already in place,
									while Foundation leaves all of these decisions up to the developer.
								</p>

							</li>

							<li>

								<h3 class="framework-head2">Components</h3>

								<p>
									Both Foundation and Bootstrap offer a wide variety of components, pre-built, and ready to be copy and pasted
									into your project. Bootstrap does have many more available than Foundation, but, at least in my opinion, the
									quality of Foundations components are far superior. One such component is a JavaScript library called "Abide"
									that makes form validation much simpler. It also has great components for responsive content management.
								</p>

							</li>

						</ul>

					</li>

					<li>

						<h2 class="framework-head"><a href="https://semantic-ui.com/" target="_blank" rel="noopener">Semantic.UI</a></h2>

						<p>
							Semantic.UI is a bit newer of a framework than Bootstrap or Foundation, but in the amount of time its been
							around, has gained quite the following of web developers. Semantic, like Foundation and Bootstrap, is a
							mobile-first web development framework. It is more customizable than Bootstrap, but less so than Foundation. It
							also has a rich ecosystem of components and templates, ready for use. Many developers rave about Semantic.UIs'
							design and say that websites created with SSemantic seem to be smoother. Some advantages and features that set
							Semantic.UI apart from other front-end web development frameworks include,
						</p>

						<ul class="list-nest">

							<li>

								<h3 class="framework-head2">Simplicity</h3>

								<p>
									Probably the biggest selling point for Semantic.UI is the simplicity of its syntax and class names. It was
									built with natural language in mind, so instead of abbreviated words or strange jargon for class names, you
									just call the classes what they are and Semantic.UI will give you the feature.
								</p>

								<div id="semantic-wrap">

									<img id="semantic-menu" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1539476887/semantic-ex.png"
									 alt="An example of Semantic.UI source code to show class names">
									Semantic.UI lets you call the component exactly what it is.

								</div>

								<div id="bootstrap-wrap">

									<img id="BS-menu" src="https://res.cloudinary.com/dmks1qdth/image/upload/v1539476895/bootstrap-ex.png" alt="An example of Bootstrap source code to show class names">
									Bootstrap, as well as most other web development frameworks, want you to learn their, often confusing, class
									names.

								</div>

								<p>
									This feature makes Semantic.UI one of the best front-end web development frameworks available for beginner web
									developers. With its simplicity, even someone with little coding experience could feel comfortable using
									Semantic.UI rather quickly.
								</p>

							</li>

							<li>

								<h3 class="framework-head2">Smaller file size</h3>

								<p>
									Many front-end web development frameworks make you download their entire ecosystem into your project,
									regardless of wether you need the components or not. This creates a large file, that must be included in your
									project in order to get the benefits of that framework, which in turn effects site performance. With
									Semantic.UI, you can pick and choose which components you want for your project and leave the rest, resulting
									in a much smaller file size and in turn, better website performance. There is a drawback to this though. Since
									Semantic.UI is very reliant on JavaScript, the packages and components themselves, are a larger file size when
									compared to the components of a framework like Bootstrap. You really have to weigh the options. If you plan on
									using a lot of components, the fact that Semantic.UI has a smaller initial file size won't matter as the file
									sizes of the components are going to eat up much of the space saved and may even start out weighing large
									frameworks, like Bootstrap.
								</p>

							</li>

							<li>
								<h3 class="framework-head2">Styling from HTML</h3>

								<p>
									Much of the styling for your web application can be done right in your HTML with Semantic.UI. The classes they
									provide can drastically cut down development time by letting you achieve this right from their classes instead
									of in your separate stylesheet.
								</p>

							</li>

						</ul>

					</li>

				</ul>

				</div>

			</div>

		</div>

	</div>

</div>